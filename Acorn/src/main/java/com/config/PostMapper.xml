<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dto.PostMapper">


    <!-- 삽입 -->
	<insert id="insertContent" parameterType="PostDTO">
	    <selectKey keyProperty="postId" resultType="long" order="BEFORE">
	        SELECT POSTIDSEQ.NEXTVAL AS postId FROM DUAL
	    </selectKey>
	    INSERT INTO postDB (postid, postBoard, userid, contid, postTitle, postDate, postEditDate, postText, nickName)
	    VALUES (#{postId}, #{postBoard}, #{userId}, #{contId, jdbcType=NUMERIC}, #{postTitle}, SYSTIMESTAMP, null, #{postText}, #{nickname})
	</insert>
	
    <!-- 조회 -->
    <select id="selectPost" resultType="PostDTO" parameterType="Long">
        SELECT * FROM postdb WHERE postid = #{postId}
    </select>

    <!-- 개별 게시물 조회 (좋아요 수, 조회수, 댓글 수 포함) -->
    <select id="selectPagePost" resultType="PostPageDTO" parameterType="Long">
        SELECT p.*,
               (SELECT COUNT(*) FROM likeDB WHERE postId = p.postId AND isLike = '1') AS likeNum,
               (SELECT viewNum FROM postInfoDB WHERE postId = p.postId) AS viewNum,
               (SELECT COUNT(*) FROM commentDB WHERE postId = p.postId) AS commentCount
        FROM postDB p
        WHERE p.postId = #{postId}
    </select>

	<delete id="deletePostInfo" parameterType="long">
	    DELETE FROM postinfodb WHERE postid = #{postId}
	</delete>
	
	<delete id="deletePost" parameterType="long">
	    DELETE FROM postdb WHERE postid = #{postId}
	</delete>


	<!-- 전체 조회 (좋아요 수, 조회수, 댓글 수 포함, 조회수 높은 순으로 정렬, 상위 5개만 선택) -->
	<select id="selectAllPosts" resultType="PostPageDTO">
		SELECT * FROM (
		    SELECT p.*,
		           (SELECT COUNT(*) FROM likeDB WHERE postId = p.postId AND isLike = '1') AS likeNum,
		           (SELECT viewNum FROM postInfoDB WHERE postId = p.postId) AS viewNum,
		           (SELECT COUNT(*) FROM commentDB WHERE postId = p.postId) AS commentCount
		    FROM postDB p
        	WHERE postBoard = #{board} AND postDate >= SYSDATE - 2
		    ORDER BY viewNum DESC
		)
		WHERE ROWNUM &lt;= 5
	</select>


    <!-- 업데이트 -->
    <update id="updateContent" parameterType="map">
        UPDATE postdb
        SET postTitle = #{updatedTitle},
            postText = #{updatedContent},
            postEditDate = SYSTIMESTAMP
        WHERE postId = #{postId}
    </update>
    

    <!-- 페이지네이션을 위한 게시물 조회 (좋아요 수, 조회수, 댓글 수 포함) -->
	<select id="selectAllByPage" resultType="PostPageDTO">
	    SELECT * FROM (
	        SELECT a.*, ROWNUM rnum,
	               (SELECT COUNT(*) FROM likeDB WHERE postId = a.postId AND isLike = '1') AS likeNum,
	               (SELECT viewNum FROM postInfoDB WHERE postId = a.postId) AS viewNum,
	               (SELECT COUNT(*) FROM commentDB WHERE postId = a.postId) AS commentCount
	        FROM (
	            SELECT * FROM postDB
	            <where>
	                postBoard = #{postBoard}
	                <if test="postTitle != null">
	                    AND postTitle LIKE '%' || #{postTitle} || '%'
	                </if>
	                <if test="postText != null">
	                    AND postText LIKE '%' || #{postText} || '%'
	                </if>
	                <if test="userId != null">
	                    AND userId LIKE '%' || #{userId} || '%'
	                </if>
	            </where>
	            ORDER BY postId DESC
	        ) a
	    ) WHERE rnum BETWEEN #{offset} + 1 AND #{offset} + #{perPage}
	</select>





    <!-- 게시물 총 개수 조회 -->
    <select id="countPosts" resultType="int">
        SELECT COUNT(*) FROM postDB
        WHERE postBoard = #{board}
    </select>
    
        <!-- 게시물 조회수 업데이트 -->
	<update id="updateViewNum" parameterType="long">
		UPDATE postInfoDB 
		SET viewNum =
			((SELECT viewNum FROM postInfoDB WHERE postId = #{postId} )+1) 
		WHERE postId = #{postId}
	</update>
	
	    <!-- 조회수를 가져오는 쿼리 -->
    <select id="viewNum" resultType="long">
        SELECT viewNum
        FROM postInfoDB
        WHERE postId = #{postId}
    </select>
    
		<!-- 좋아요 수 조회 -->
	<select id="likeNum" parameterType="Long" resultType="Long">
		SELECT COUNT(*) AS likeCount
		FROM likeDB
		WHERE postId = #{postId} AND isLike = '1'
	</select>
	


</mapper>
