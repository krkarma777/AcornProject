<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CommentMapper">
<!-- //최초 생성시에는 sql이 꼭 지워져있어야함. 여기가 비어있기 !! -->

<insert id="CommentMapper" parameterType="commentDTO">

insert into commentDB (comid,postid,userid,comdate,comtext,nickname,abovecom)
values (comIdSeq.nextval, #{postId}, #{userId}, SYSTIMESTAMP, #{comText}, #{nickname}, #{aboveCom})

</insert>



<select id="SelectAll" resultType="commentDTO">
select comid,postid,userid,comdate,comtext,abovecom from commentDB order by comid asc
</select>


<delete id="deleteComment" parameterType="int">

delete from commentDB where comid = #{comId}

</delete>


<select id="selectOne" parameterType="commentDTO" resultType="int">

select comid from commentDB 
where postid = #{postId} and 
userid = #{userId} and 
comdate = SYSTIMESTAMP

</select>

<update id="deleteUpdateComment"  parameterType="int">

update commentDB 
set comtext = '삭제된 댓글입니다.'
where comid = #{comId}

</update>


<update id="updateComment" parameterType="hashmap">
update commentDB 
set comtext = #{comText}
where comid = #{comId}
</update>


<select id="selectAllByPostId" resultType="commentDTO" parameterType="long">
select comid,postid,userid,comdate,comtext,nickname,abovecom from commentDB where postid=#{postId} order by comid asc
</select>



</mapper>